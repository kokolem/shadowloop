{"version":3,"sources":["Components/Layout.jsx","Components/Pages/DeckOverview/Deck.jsx","Components/Pages/DeckOverview/LoadingDeck.jsx","Components/Pages/DeckOverview/DeckOverview.jsx","Components/Pages/DeckOverview/index.js","Components/Pages/Error404/index.js","Components/Pages/Error404/Error404.jsx","Components/Pages/DeckDetail/Slide.jsx","Components/Pages/DeckDetail/LoadingSlide.jsx","Components/Pages/DeckDetail/Controls.jsx","Components/Pages/DeckDetail/DeckDetail.jsx","Components/Pages/DeckDetail/index.js","App.jsx","index.jsx"],"names":["useStyles","makeStyles","theme","offset","mixins","toolbar","Layout","children","classes","CssBaseline","AppBar","Toolbar","Typography","variant","component","className","Container","root","minWidth","Deck","name","Card","CardContent","color","CardActions","Button","size","Link","to","disabled","LoadingDeck","Skeleton","Array","Math","floor","random","map","join","deckPadding","paddingTop","spacing","DeckOverview","useState","decks","setDecks","isLoading","setIsLoading","useEffect","fetch","process","then","res","text","result","split","slice","error","console","log","keys","key","Error404","container","card","width","media","maxWidth","Slide","slideContent","deckName","onSlideFinished","isSlidePlaying","englishText","czechText","audio","image","timesPlayed","setTimesPlayed","isAudioPlaying","setIsAudioPlaying","isAudioPaused","setIsAudioPaused","isSlideFinished","setIsSlideFinished","Box","display","m","src","alt","gutterBottom","url","playing","height","onEnded","Promise","r","setTimeout","style","box","slider","marginLeft","marginRight","marginTop","Controls","isPlaying","onResumePauseClick","onSlide","maxSLide","onSlideChange","IconButton","onClick","Pause","PlayArrow","Slider","min","max","value","onChange","valueLabelDisplay","valueLabelFormat","x","minHeight","paddingBottom","DeckDetail","useParams","deck","deckContent","setDeckContent","setOnSlide","setIsPlaying","readRemoteFile","download","complete","results","data","length","Image","flexDirection","flex","_","slide","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSASMA,EAAYC,KAAW,SAACC,GAAD,MAAY,CACvCC,OAAQD,EAAME,OAAOC,YAGR,SAASC,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SACzBC,EAAUR,IAChB,OACE,qCACE,cAACS,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,6BAGJ,qBAAKC,UAAWP,EAAQL,SACxB,cAACa,EAAA,EAAD,UACGT,O,iECfHP,EAAYC,YAAW,CAC3BgB,KAAM,CACJC,SAAU,OAIC,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACvBZ,EAAUR,IAEhB,OACE,eAACqB,EAAA,EAAD,CAAMN,UAAWP,EAAQS,KAAMJ,QAAQ,WAAvC,UACE,eAACS,EAAA,EAAD,WACE,cAACV,EAAA,EAAD,CAAYC,QAAQ,WAAWU,MAAM,gBAArC,4CAGA,cAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,SACIM,OAGN,eAACI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,YAAYT,UAAWa,IAAMC,GAAE,gBAAWR,GAArE,wCAGA,cAACK,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,YAAYM,UAAQ,EAA/C,mC,aCxBF7B,EAAYC,YAAW,CAC3BgB,KAAM,CACJC,SAAU,OAIC,SAASY,IACtB,IAAMtB,EAAUR,IAEhB,OACE,eAACqB,EAAA,EAAD,CAAMN,UAAWP,EAAQS,KAAMJ,QAAQ,WAAvC,UACE,eAACS,EAAA,EAAD,WACE,cAACS,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,CAAYC,QAAQ,WAAWU,MAAM,gBAArC,8CAIF,cAACQ,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,SACG,YAAIkB,MAAMC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,KAAKC,KAAI,iBAAO,OAAMC,KAAK,WAI7E,eAACb,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,UACE,cAACN,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,YAA3B,0CAIF,cAACQ,EAAA,EAAD,UACE,cAACN,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,YAAYM,UAAQ,EAA/C,qCClCV,IAAM7B,EAAYC,KAAW,SAACC,GAAD,MAAY,CACvCoC,YAAa,CACXC,WAAYrC,EAAMsC,QAAQ,QCLfC,MDSA,WACb,IAAMjC,EAAUR,IADqB,EAGX0C,mBAAS,IAHE,mBAG9BC,EAH8B,KAGvBC,EAHuB,OAIHF,oBAAS,GAJN,mBAI9BG,EAJ8B,KAInBC,EAJmB,KAkBrC,OAZAC,qBAAU,WACRC,MAAM,GAAD,OAAIC,QAAJ,eACFC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GACCT,EAASS,EAAOC,MAAM,MAAMC,MAAM,GAAI,IACtCT,GAAa,MAEf,SAACU,GAAYC,QAAQC,IAAIF,QAE5B,IAGD,mCACGX,EACC,mCACG,YAAIb,MAAM,GAAG2B,QAAQvB,KAAI,SAACwB,GAAD,OACxB,qBAAK7C,UAAWP,EAAQ8B,YAAxB,SACE,cAACR,EAAD,KADwC8B,QAK5CjB,EAAMP,KAAI,SAAChB,GAAD,OACZ,qBAAKL,UAAWP,EAAQ8B,YAAxB,SACE,cAACnB,EAAD,CAAMC,KAAMA,KAD4BA,SEtCnCyC,MCAA,WACb,OACE,qD,oCCKE7D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCe,KAAM,CACJsB,WAAYrC,EAAMsC,QAAQ,IAE5BsB,UAAW,GAGXC,KAAM,CACJC,MAAO,eAETC,MAAO,CACLC,SAAU,YAIC,SAASC,EAAT,GAEX,IADFC,EACC,EADDA,aAAcC,EACb,EADaA,SAAUC,EACvB,EADuBA,gBAAiBC,EACxC,EADwCA,eAEnC/D,EAAUR,IADf,cAK8CoE,EAL9C,GAKMI,EALN,KAKmBC,EALnB,KAK8BC,EAL9B,KAKqCC,EALrC,OAOqCjC,mBAAS,GAP9C,mBAOMkC,EAPN,KAOmBC,EAPnB,OAQ2CnC,oBAAS,GARpD,mBAQMoC,EARN,KAQsBC,EARtB,OASyCrC,oBAAS,GATlD,mBASMsC,EATN,KASqBC,EATrB,OAU6CvC,oBAAS,GAVtD,mBAUMwC,EAVN,KAUuBC,EAVvB,KA2BD,OAfApC,qBAAU,WACR8B,EAAe,KACd,CAACT,IAEJrB,qBAAU,WACJ6B,EAAc,GAAGG,EAAkBR,IAAmBS,KACzD,CAACT,EAAgBS,EAAeJ,IAEnC7B,qBAAU,WACJwB,GAAkBW,IACpBC,GAAmB,GACnBb,OAED,CAACC,EAAgBW,EAAiBZ,IAGnC,qBAAKvD,UAAWP,EAAQS,KAAxB,SACE,cAACmE,EAAA,EAAD,CACErE,UAAWP,EAAQsD,UACnBuB,QAAQ,OAFV,SAIE,cAACD,EAAA,EAAD,CAAKE,EAAE,OAAP,SACE,eAACjE,EAAA,EAAD,CAAMN,UAAWP,EAAQuD,KAAzB,UACE,qBACEhD,UAAWP,EAAQyD,MACnBsB,IAAG,UAAKtC,QAAL,YAA6CoB,EAA7C,YAAyDM,GAC5Da,IAAKhB,IAEP,eAAClD,EAAA,EAAD,WACE,cAACV,EAAA,EAAD,CAAY6E,cAAY,EAAC5E,QAAQ,KAAKC,UAAU,KAAhD,SACG0D,IAEH,cAAC5D,EAAA,EAAD,CAAYC,QAAQ,QAAQU,MAAM,gBAAgBT,UAAU,IAA5D,SACG2D,IAEH,cAAC,IAAD,CACEiB,IAAG,UAAKzC,QAAL,YAA6CoB,EAA7C,YAAyDK,GAC5DiB,QAASb,EACTd,MAAO,EACP4B,OAAQ,EACRC,QAAS,WACPhB,EAAeD,EAAc,GACzBA,EAAc,GAChBK,GAAiB,GACjB,IAAIa,SAAQ,SAACC,GAAD,OAAOC,WAAWD,EArDhC,QAqD6C7C,MACzC,kBAAM+B,GAAiB,OAGzB,IAAIa,SAAQ,SAACC,GAAD,OAAOC,WAAWD,EAzDhC,QAyD6C7C,MACzC,kBAAMiC,GAAmB,qBC/E/C,IAAMnF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCe,KAAM,CACJsB,WAAYrC,EAAMsC,QAAQ,IAE5BsB,UAAW,GAGXC,KAAM,GAINE,MAAO,CACLC,SAAU,YAIC,SAASC,IACtB,IAAM3D,EAAUR,IAEhB,OACE,qBAAKe,UAAWP,EAAQS,KAAxB,SACE,cAACmE,EAAA,EAAD,CACErE,UAAWP,EAAQsD,UACnBuB,QAAQ,OAFV,SAIE,cAACD,EAAA,EAAD,CAAKE,EAAE,OAAP,SACE,eAACjE,EAAA,EAAD,CAAMN,UAAWP,EAAQuD,KAAzB,UACE,cAAChC,EAAA,EAAD,CAAUlB,QAAQ,OAAlB,SACE,qBAAKoF,MAAO,CAAE1D,WAAY,MAAOyB,MAAO,aAE1C,eAAC1C,EAAA,EAAD,WACE,cAACS,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,CAAY6E,cAAY,EAAC5E,QAAQ,KAAKC,UAAU,KAAhD,0CAIF,cAACiB,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,CAAYC,QAAQ,QAAQU,MAAM,gBAAgBT,UAAU,IAA5D,6C,wCCpCVd,EAAYC,KAAW,iBAAO,CAClCiG,IAAK,CACH3D,WAAY,QAEd4D,OAAQ,CACNC,WAAY,OACZC,YAAa,OACbC,UAAW,YAIA,SAASC,EAAT,GAGX,IADFC,EACC,EADDA,UAAWC,EACV,EADUA,mBAAoBC,EAC9B,EAD8BA,QAASC,EACvC,EADuCA,SAAUC,EACjD,EADiDA,cAE5CpG,EAAUR,IAEhB,OACE,cAACqB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAAC8D,EAAA,EAAD,CAAKrE,UAAWP,EAAQ0F,IAAKb,QAAQ,OAArC,UACE,cAACwB,EAAA,EAAD,CAAYC,QAASL,EAArB,SACID,EACA,cAACO,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,MAGJ,cAACC,EAAA,EAAD,CACElG,UAAWP,EAAQ2F,OACnBe,IAAK,EACLC,IAAKR,EAAW,EAChBS,MAAOV,EACPW,SAAUT,EACVU,kBAAkB,KAClBC,iBAAkB,SAACC,GAAD,OAAOA,EAAI,YCnCzC,IAAMxH,EAAYC,KAAW,SAACC,GAAD,MAAY,CACvCe,KAAM,CACJwG,UAAW,qBACXC,cAAexH,EAAMsC,QAAQ,QCVlBmF,MDcA,WACb,IAAMnH,EAAUR,IAEFqE,EAAauD,cAAnBC,KAH2B,EAKGnF,mBAAS,IALZ,mBAK5BoF,EAL4B,KAKfC,EALe,OAMLrF,mBAAS,GANJ,mBAM5BgE,EAN4B,KAMnBsB,EANmB,OAODtF,oBAAS,GAPR,mBAO5BG,EAP4B,KAOjBC,EAPiB,OAQDJ,oBAAS,GARR,mBAQ5B8D,EAR4B,KAQjByB,EARiB,KAqCnC,OA3BAlF,qBAAU,WACRmF,YAAe,GAAD,OAAIjF,QAAJ,YAA4CoB,EAA5C,YAAwDA,EAAxD,QAAwE,CACpF8D,UAAU,EACVC,SAAU,SAACC,GACTN,EAAeM,EAAQC,KAAK/E,MAAM,GAAI,IACtCT,GAAa,QAGhB,CAACuB,IAEJtB,qBAAU,WACHF,GAEC6D,EAAU,EAAIoB,EAAYS,UAC5B,IAAIC,OAAQjD,IAAZ,UAAqBtC,QAArB,YAA6DoB,EAA7D,YAAyEyD,EAAYpB,EAAU,GAAG,OAGrG,CAACoB,EAAazD,EAAUxB,EAAW6D,IAWpC,eAACtB,EAAA,EAAD,CACErE,UAAWP,EAAQS,KACnBoE,QAAQ,OACRoD,cAAc,SAHhB,UAKE,cAACrD,EAAA,EAAD,CAAKsD,KAAK,IAAV,SACG7F,EAAY,cAAC,EAAD,IACX,cAACsB,EAAD,CACEC,aAAc0D,EAAYpB,GAC1BrC,SAAUA,EACVC,gBAnBV,WACMoC,EAAU,EAAIoB,EAAYS,OAC5BP,EAAWtB,EAAU,GAErBuB,GAAa,IAgBP1D,eAAgBiC,OAInB3D,GACH,cAAC0D,EAAD,CACEC,UAAWA,EACXC,mBAAoB,kBAAMwB,GAAczB,IACxCE,QAASA,EACTC,SAAUmB,EAAYS,OACtB3B,cAAe,SAAC+B,EAAGC,GAAJ,OAAcZ,EAAWY,UExCjCC,MAvBf,WACE,OACE,cAAC,IAAD,CAAQC,SAAU7F,cAAlB,SACE,cAAC3C,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyI,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,IAAD,CAAUpH,GAAG,QAEf,cAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,cCrBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7014e98c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  offset: theme.mixins.toolbar,\n}));\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"h1\">Shadow loop</Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n      <Container>\n        {children}\n      </Container>\n    </>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function Deck({ name }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"overline\" color=\"textSecondary\">\n          Základní balíček\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          { name }\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"secondary\" component={Link} to={`decks/${name}`}>\n          Spustit od začátku\n        </Button>\n        <Button size=\"small\" color=\"secondary\" disabled>\n          Pokračovat\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nDeck.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function LoadingDeck() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Skeleton>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Základní balíček\n          </Typography>\n        </Skeleton>\n        <Skeleton>\n          <Typography variant=\"h5\" component=\"h2\">\n            {[...Array(Math.floor(Math.random() * 11) + 10)].map(() => ('a')).join('')}\n          </Typography>\n        </Skeleton>\n      </CardContent>\n      <CardActions>\n        <Skeleton>\n          <Button size=\"small\" color=\"secondary\">\n            Spustit od začátku\n          </Button>\n        </Skeleton>\n        <Skeleton>\n          <Button size=\"small\" color=\"secondary\" disabled>\n            Pokračovat\n          </Button>\n        </Skeleton>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Deck from './Deck';\nimport LoadingDeck from './LoadingDeck';\n\nconst useStyles = makeStyles((theme) => ({\n  deckPadding: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport default function DeckOverview() {\n  const classes = useStyles();\n\n  const [decks, setDecks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_DECKS_BASE_URL}/decks.txt`)\n      .then((res) => res.text())\n      .then(\n        (result) => {\n          setDecks(result.split('\\n').slice(0, -1));\n          setIsLoading(false);\n        },\n        (error) => { console.log(error); },\n      );\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <>\n          {[...Array(4).keys()].map((key) => (\n            <div className={classes.deckPadding} key={key}>\n              <LoadingDeck />\n            </div>\n          ))}\n        </>\n      ) : decks.map((name) => (\n        <div className={classes.deckPadding} key={name}>\n          <Deck name={name} />\n        </div>\n      ))}\n    </>\n  );\n}\n","import DeckOverview from './DeckOverview';\n\nexport default DeckOverview;\n","import Error404 from './Error404';\n\nexport default Error404;\n","import React from 'react';\n\nexport default function Error404() {\n  return (\n    <>\n      Error 404 :(\n    </>\n  );\n}\n","import PropTypes, { string } from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\nimport ReactPlayer from 'react-player';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n  },\n  container: {\n    // width: '100%',\n  },\n  card: {\n    width: 'fit-content',\n  },\n  media: {\n    maxWidth: '100%',\n  },\n}));\n\nexport default function Slide({\n  slideContent, deckName, onSlideFinished, isSlidePlaying,\n}) {\n  const classes = useStyles();\n\n  const timeout = 2000;\n\n  const [englishText, czechText, audio, image] = slideContent;\n\n  const [timesPlayed, setTimesPlayed] = useState(0);\n  const [isAudioPlaying, setIsAudioPlaying] = useState(true);\n  const [isAudioPaused, setIsAudioPaused] = useState(false);\n  const [isSlideFinished, setIsSlideFinished] = useState(false);\n\n  useEffect(() => {\n    setTimesPlayed(0);\n  }, [slideContent]);\n\n  useEffect(() => {\n    if (timesPlayed < 3) setIsAudioPlaying(isSlidePlaying && !isAudioPaused);\n  }, [isSlidePlaying, isAudioPaused, timesPlayed]);\n\n  useEffect(() => {\n    if (isSlidePlaying && isSlideFinished) {\n      setIsSlideFinished(false);\n      onSlideFinished();\n    }\n  }, [isSlidePlaying, isSlideFinished, onSlideFinished]);\n\n  return (\n    <div className={classes.root}>\n      <Box\n        className={classes.container}\n        display=\"flex\"\n      >\n        <Box m=\"auto\">\n          <Card className={classes.card}>\n            <img\n              className={classes.media}\n              src={`${process.env.REACT_APP_DECKS_BASE_URL}/${deckName}/${image}`}\n              alt={englishText}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {englishText}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {czechText}\n              </Typography>\n              <ReactPlayer\n                url={`${process.env.REACT_APP_DECKS_BASE_URL}/${deckName}/${audio}`}\n                playing={isAudioPlaying}\n                width={0}\n                height={0}\n                onEnded={() => {\n                  setTimesPlayed(timesPlayed + 1);\n                  if (timesPlayed < 2) {\n                    setIsAudioPaused(true);\n                    new Promise((r) => setTimeout(r, timeout)).then(\n                      () => setIsAudioPaused(false),\n                    );\n                  } else {\n                    new Promise((r) => setTimeout(r, timeout)).then(\n                      () => setIsSlideFinished(true),\n                    );\n                  }\n                }}\n              />\n            </CardContent>\n          </Card>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nSlide.propTypes = {\n  deckName: PropTypes.string.isRequired,\n  onSlideFinished: PropTypes.func.isRequired,\n  isSlidePlaying: PropTypes.bool.isRequired,\n  slideContent: PropTypes.arrayOf(string).isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n  },\n  container: {\n    // minWidth: '100%',\n  },\n  card: {\n    // width: '300px',\n    // maxWidth: '100%',\n  },\n  media: {\n    maxWidth: '100%',\n  },\n}));\n\nexport default function Slide() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Box\n        className={classes.container}\n        display=\"flex\"\n      >\n        <Box m=\"auto\">\n          <Card className={classes.card}>\n            <Skeleton variant=\"rect\">\n              <div style={{ paddingTop: '57%', width: '300px' }} />\n            </Skeleton>\n            <CardContent>\n              <Skeleton>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Lorem ipsum dolor sit amet\n                </Typography>\n              </Skeleton>\n              <Skeleton>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Lorem ipsum dolor\n                </Typography>\n              </Skeleton>\n            </CardContent>\n          </Card>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Box,\n  Card, CardContent, IconButton, Slider,\n} from '@material-ui/core';\nimport { Pause as PauseIcon, PlayArrow as PlayArrowIcon } from '@material-ui/icons';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(() => ({\n  box: {\n    paddingTop: '20px',\n  },\n  slider: {\n    marginLeft: '15px',\n    marginRight: '15px',\n    marginTop: '10px',\n  },\n}));\n\nexport default function Controls({\n  // eslint-disable-next-line no-unused-vars\n  isPlaying, onResumePauseClick, onSlide, maxSLide, onSlideChange,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent>\n        <Box className={classes.box} display=\"flex\">\n          <IconButton onClick={onResumePauseClick}>\n            { isPlaying ? (\n              <PauseIcon />\n            ) : (\n              <PlayArrowIcon />\n            )}\n          </IconButton>\n          <Slider\n            className={classes.slider}\n            min={0}\n            max={maxSLide - 1}\n            value={onSlide}\n            onChange={onSlideChange}\n            valueLabelDisplay=\"on\"\n            valueLabelFormat={(x) => x + 1}\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nControls.propTypes = {\n  isPlaying: PropTypes.bool.isRequired,\n  maxSLide: PropTypes.number.isRequired,\n  onResumePauseClick: PropTypes.func.isRequired,\n  onSlide: PropTypes.number.isRequired,\n  onSlideChange: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { readRemoteFile } from 'react-papaparse';\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Slide from './Slide';\nimport LoadingSlide from './LoadingSlide';\nimport Controls from './Controls';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: 'calc(100vh - 64px)',\n    paddingBottom: theme.spacing(2),\n  },\n}));\n\nexport default function DeckDetail() {\n  const classes = useStyles();\n\n  const { deck: deckName } = useParams();\n\n  const [deckContent, setDeckContent] = useState([]);\n  const [onSlide, setOnSlide] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(true);\n\n  useEffect(() => {\n    readRemoteFile(`${process.env.REACT_APP_DECKS_BASE_URL}/${deckName}/${deckName}.csv`, {\n      download: true,\n      complete: (results) => {\n        setDeckContent(results.data.slice(0, -1));\n        setIsLoading(false);\n      },\n    });\n  }, [deckName]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      // preload next image\n      if (onSlide + 1 < deckContent.length) {\n        new Image().src = `${process.env.REACT_APP_DECKS_BASE_URL}/${deckName}/${deckContent[onSlide + 1][3]}`;\n      }\n    }\n  }, [deckContent, deckName, isLoading, onSlide]);\n\n  function nextSlide() {\n    if (onSlide + 1 < deckContent.length) {\n      setOnSlide(onSlide + 1);\n    } else {\n      setIsPlaying(false);\n    }\n  }\n\n  return (\n    <Box\n      className={classes.root}\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box flex=\"1\">\n        {isLoading ? <LoadingSlide /> : (\n          <Slide\n            slideContent={deckContent[onSlide]}\n            deckName={deckName}\n            onSlideFinished={nextSlide}\n            isSlidePlaying={isPlaying}\n          />\n        )}\n      </Box>\n      { !isLoading && (\n      <Controls\n        isPlaying={isPlaying}\n        onResumePauseClick={() => setIsPlaying(!isPlaying)}\n        onSlide={onSlide}\n        maxSLide={deckContent.length}\n        onSlideChange={(_, slide) => setOnSlide(slide)}\n      />\n      )}\n    </Box>\n  );\n}\n","import DeckDetail from './DeckDetail';\n\nexport default DeckDetail;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Layout from './Components/Layout';\nimport DeckOverview from './Components/Pages/DeckOverview';\nimport Error404 from './Components/Pages/Error404';\nimport DeckDetail from './Components/Pages/DeckDetail';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\">\n            <DeckOverview />\n          </Route>\n          <Route exact path=\"/decks\">\n            <Redirect to=\"/\" />\n          </Route>\n          <Route exact path=\"/decks/:deck\">\n            <DeckDetail />\n          </Route>\n          <Route>\n            <Error404 />\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}