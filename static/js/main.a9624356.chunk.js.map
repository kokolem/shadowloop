{"version":3,"sources":["Components/Layout.jsx","Components/Pages/DecksList/Deck.jsx","Components/Pages/DecksList/LoadingDeck.jsx","Components/Pages/DecksList/DecksList.jsx","Components/Pages/DecksList/index.js","Components/Pages/Error404/index.js","Components/Pages/Error404/Error404.jsx","Components/Pages/DeckDetail/Slide.jsx","Components/Pages/DeckDetail/LoadingSlide.jsx","Components/Pages/DeckDetail/Controls.jsx","Components/Pages/DeckDetail/DeckDetail.jsx","Components/Pages/DeckDetail/index.js","App.jsx","index.jsx"],"names":["useStyles","makeStyles","theme","offset","mixins","toolbar","Layout","children","classes","CssBaseline","AppBar","Toolbar","to","style","textDecoration","color","Typography","variant","component","className","root","minWidth","Deck","name","Card","CardActionArea","Link","CardContent","CardActions","Button","size","LoadingDeck","Skeleton","Array","Math","floor","random","map","join","deckPadding","paddingTop","spacing","deckListPadding","paddingBottom","DecksList","useState","decks","setDecks","isLoading","setIsLoading","useEffect","fetch","process","then","res","text","result","split","slice","error","console","log","Container","keys","key","Error404","padding","card","width","media","maxWidth","loopButton","float","Slide","slideContent","deckName","onSlideFinished","isSlidePlaying","czechLabelShown","englishLabelShown","pauseDurationMultiplier","pauseDuration","useRef","englishText","czechText","audio","image","timesPlayed","setTimesPlayed","timesPlayedRef","isSlideRepeating","setIsSlideRepeating","isAudioPlaying","setIsAudioPlaying","isAudioPaused","setIsAudioPaused","timeoutRef","current","clearTimeout","Box","display","m","src","alt","ToggleButton","value","selected","onChange","Repeat","gutterBottom","url","playing","height","onEnded","setTimeout","onDuration","t","margin","box","slider","marginLeft","marginRight","marginTop","Controls","isPlaying","onResumePauseClick","onSlide","maxSlide","onSlideChange","setCzechLabelShown","setEnglishLabelShown","setPauseDurationMultiplier","Paper","square","flexDirection","alignItems","IconButton","onClick","Pause","PlayArrow","Slider","min","max","valueLabelDisplay","valueLabelFormat","x","FormGroup","row","FormControlLabel","control","Switch","checked","e","target","label","FormControl","InputLabel","id","Select","labelId","MenuItem","minHeight","DeckDetail","useParams","deck","deckContent","setDeckContent","setOnSlide","setIsPlaying","readRemoteFile","download","complete","results","newDeckContent","data","firstImage","Image","onload","length","Audio","flex","_","slide","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9624356.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  offset: theme.mixins.toolbar,\n}));\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <AppBar>\n        <Toolbar>\n          <Link to=\"/\" style={{ textDecoration: 'none', color: 'unset' }}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Shadow loop\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n      {children}\n    </>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { CardActionArea } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function Deck({ name }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardActionArea component={Link} to={`decks/${name}`}>\n        <CardContent>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Základní balíček\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"secondary\">\n            Spustit od začátku\n          </Button>\n        </CardActions>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nDeck.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function LoadingDeck() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Skeleton>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Základní balíček\n          </Typography>\n        </Skeleton>\n        <Skeleton>\n          <Typography variant=\"h5\" component=\"h2\">\n            {[...Array(Math.floor(Math.random() * 11) + 10)].map(() => ('a')).join('')}\n          </Typography>\n        </Skeleton>\n      </CardContent>\n      <CardActions>\n        <Skeleton>\n          <Button size=\"small\" color=\"secondary\">\n            Spustit od začátku\n          </Button>\n        </Skeleton>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Container } from '@material-ui/core';\nimport Deck from './Deck';\nimport LoadingDeck from './LoadingDeck';\n\nconst useStyles = makeStyles((theme) => ({\n  deckPadding: {\n    paddingTop: theme.spacing(2),\n  },\n  deckListPadding: {\n    paddingBottom: theme.spacing(2),\n  },\n}));\n\nexport default function DecksList() {\n  const classes = useStyles();\n\n  const [decks, setDecks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_DECKS_BASE_URL}/decks.txt`)\n      .then((res) => res.text())\n      .then(\n        (result) => {\n          setDecks(result.split('\\n').slice(0, -1));\n          setIsLoading(false);\n        },\n        (error) => { console.log(error); },\n      );\n  }, []);\n\n  return (\n    <Container className={classes.deckListPadding}>\n      {isLoading ? (\n        <>\n          {[...Array(4).keys()].map((key) => (\n            <div className={classes.deckPadding} key={key}>\n              <LoadingDeck />\n            </div>\n          ))}\n        </>\n      ) : decks.map((name) => (\n        <div className={classes.deckPadding} key={name}>\n          <Deck name={name} />\n        </div>\n      ))}\n    </Container>\n  );\n}\n","import DecksList from './DecksList';\n\nexport default DecksList;\n","import Error404 from './Error404';\n\nexport default Error404;\n","import React from 'react';\n\nexport default function Error404() {\n  return (\n    <>\n      Error 404 :(\n    </>\n  );\n}\n","import PropTypes, { string } from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\nimport ReactPlayer from 'react-player';\nimport { ToggleButton } from '@material-ui/lab';\nimport { Repeat as RepeatIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  card: {\n    width: 'fit-content',\n  },\n  media: {\n    maxWidth: '100%',\n  },\n  loopButton: {\n    float: 'right',\n    paddingBottom: theme.spacing(2),\n  },\n}));\n\nexport default function Slide({\n  slideContent, deckName, onSlideFinished, isSlidePlaying, czechLabelShown, englishLabelShown,\n  pauseDurationMultiplier,\n}) {\n  const classes = useStyles();\n\n  const pauseDuration = useRef(2);\n\n  const [englishText, czechText, audio, image] = slideContent;\n\n  const [timesPlayed, setTimesPlayed] = useState(0);\n  const timesPlayedRef = useRef(timesPlayed);\n\n  const [isSlideRepeating, setIsSlideRepeating] = useState(false);\n\n  const [isAudioPlaying, setIsAudioPlaying] = useState(true);\n  const [isAudioPaused, setIsAudioPaused] = useState(false);\n\n  const timeoutRef = useRef(0);\n\n  useEffect(() => {\n    setTimesPlayed(0);\n    timesPlayedRef.current = 0;\n    setIsAudioPaused(false);\n    clearTimeout(timeoutRef.current);\n  }, [slideContent]);\n\n  useEffect(() => {\n    setIsAudioPlaying(isSlidePlaying && !isAudioPaused);\n  }, [isSlidePlaying, isAudioPaused]);\n\n  useEffect(() => {\n    if (isSlidePlaying && timesPlayedRef.current > 2 && !isSlideRepeating) {\n      onSlideFinished();\n    }\n  }, [isSlidePlaying, isSlideRepeating, onSlideFinished, timesPlayed]);\n\n  function onAudioFinished() {\n    setIsAudioPaused(true);\n    timeoutRef.current = setTimeout(() => {\n      timesPlayedRef.current += 1;\n      setTimesPlayed(timesPlayedRef.current);\n      setIsAudioPaused(false);\n    }, pauseDuration.current * 1000 * pauseDurationMultiplier);\n  }\n\n  return (\n    <Box display=\"flex\" className={classes.root}>\n      <Box m=\"auto\">\n        <Card className={classes.card}>\n          <img\n            className={classes.media}\n            src={`${process.env.REACT_APP_DECKS_BASE_URL}/${deckName}/${image}`}\n            alt={englishText}\n          />\n          <CardContent>\n            <div className={classes.loopButton}>\n              <ToggleButton\n                value=\"repeat\"\n                selected={isSlideRepeating}\n                onChange={() => setIsSlideRepeating(!isSlideRepeating)}\n              >\n                <RepeatIcon />\n              </ToggleButton>\n            </div>\n            { (englishLabelShown || czechLabelShown) && (\n            <>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {englishLabelShown ? englishText : czechText}\n              </Typography>\n              { (englishLabelShown && czechLabelShown) && (\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {czechText}\n              </Typography>\n              )}\n            </>\n            )}\n          </CardContent>\n          <ReactPlayer\n            url={`${process.env.REACT_APP_DECKS_BASE_URL}/${deckName}/${audio}`}\n            playing={isAudioPlaying}\n            width={0}\n            height={0}\n            onEnded={onAudioFinished}\n            onDuration={(t) => {\n              pauseDuration.current = t;\n            }}\n          />\n        </Card>\n      </Box>\n    </Box>\n  );\n}\n\nSlide.propTypes = {\n  czechLabelShown: PropTypes.bool.isRequired,\n  deckName: PropTypes.string.isRequired,\n  englishLabelShown: PropTypes.bool.isRequired,\n  isSlidePlaying: PropTypes.bool.isRequired,\n  onSlideFinished: PropTypes.func.isRequired,\n  pauseDurationMultiplier: PropTypes.number.isRequired,\n  slideContent: PropTypes.arrayOf(string).isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  media: {\n    maxWidth: '100%',\n  },\n}));\n\nexport default function Slide() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Box\n        display=\"flex\"\n      >\n        <Box m=\"auto\">\n          <Card>\n            <Skeleton variant=\"rect\">\n              <div style={{ paddingTop: '57%', width: '400px' }} />\n            </Skeleton>\n            <CardContent>\n              <Skeleton>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Lorem ipsum dolor sit amet\n                </Typography>\n              </Skeleton>\n              <Skeleton>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Lorem ipsum dolor\n                </Typography>\n              </Skeleton>\n            </CardContent>\n          </Card>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Box, Paper, IconButton, Slider, Container, FormControl, InputLabel, Select, MenuItem,\n} from '@material-ui/core';\nimport { Pause as PauseIcon, PlayArrow as PlayArrowIcon } from '@material-ui/icons';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  box: {\n    paddingTop: '20px',\n  },\n  slider: {\n    marginLeft: '15px',\n    marginRight: '15px',\n    marginTop: '10px',\n  },\n}));\n\nexport default function Controls({\n  isPlaying, onResumePauseClick, onSlide, maxSlide, onSlideChange,\n  czechLabelShown, setCzechLabelShown, englishLabelShown, setEnglishLabelShown,\n  pauseDurationMultiplier, setPauseDurationMultiplier,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Paper square className={classes.root}>\n      <Container>\n        <Box className={classes.box} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Box display=\"flex\" width=\"100%\">\n            <IconButton onClick={onResumePauseClick}>\n              { isPlaying ? (\n                <PauseIcon />\n              ) : (\n                <PlayArrowIcon />\n              )}\n            </IconButton>\n            <Slider\n              className={classes.slider}\n              min={0}\n              max={maxSlide - 1}\n              value={onSlide}\n              onChange={onSlideChange}\n              valueLabelDisplay=\"on\"\n              valueLabelFormat={(x) => x + 1}\n            />\n          </Box>\n          <FormGroup row>\n            <FormControlLabel\n              control={(\n                <Switch\n                  checked={englishLabelShown}\n                  onChange={(e) => setEnglishLabelShown(e.target.checked)}\n                  color=\"primary\"\n                />\n              )}\n              label=\"Anglicky\"\n            />\n            <FormControlLabel\n              control={(\n                <Switch\n                  checked={czechLabelShown}\n                  onChange={(e) => setCzechLabelShown(e.target.checked)}\n                  color=\"primary\"\n                />\n              )}\n              label=\"Česky\"\n            />\n            <FormControl variant=\"outlined\">\n              <InputLabel id=\"pause-label\">Pauza</InputLabel>\n              <Select\n                labelId=\"pause-label\"\n                label=\"Pauza\"\n                value={pauseDurationMultiplier}\n                onChange={(e) => setPauseDurationMultiplier(e.target.value)}\n              >\n                <MenuItem value={1}>1×</MenuItem>\n                <MenuItem value={1.5}>1,5×</MenuItem>\n                <MenuItem value={2}>2×</MenuItem>\n              </Select>\n            </FormControl>\n          </FormGroup>\n        </Box>\n      </Container>\n    </Paper>\n  );\n}\n\nControls.propTypes = {\n  czechLabelShown: PropTypes.bool.isRequired,\n  englishLabelShown: PropTypes.bool.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n  maxSlide: PropTypes.number.isRequired,\n  onResumePauseClick: PropTypes.func.isRequired,\n  onSlide: PropTypes.number.isRequired,\n  onSlideChange: PropTypes.func.isRequired,\n  pauseDurationMultiplier: PropTypes.number.isRequired,\n  setCzechLabelShown: PropTypes.func.isRequired,\n  setEnglishLabelShown: PropTypes.func.isRequired,\n  setPauseDurationMultiplier: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { readRemoteFile } from 'react-papaparse';\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Slide from './Slide';\nimport LoadingSlide from './LoadingSlide';\nimport Controls from './Controls';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    '@media (min-width:0px) and (orientation: landscape)': {\n      minHeight: 'calc(100vh - 48px)',\n    },\n    '@media (min-width:600px)': {\n      minHeight: 'calc(100vh - 64px)',\n    },\n    minHeight: 'calc(100vh - 56px)',\n  },\n}));\n\nexport default function DeckDetail() {\n  const classes = useStyles();\n\n  const { deck: deckName } = useParams();\n\n  const [deckContent, setDeckContent] = useState([]);\n  const [onSlide, setOnSlide] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [czechLabelShown, setCzechLabelShown] = useState(true);\n  const [englishLabelShown, setEnglishLabelShown] = useState(true);\n  const [pauseDurationMultiplier, setPauseDurationMultiplier] = useState(1.5);\n\n  useEffect(() => {\n    readRemoteFile(`${process.env.REACT_APP_DECKS_BASE_URL}/${deckName}/${deckName}.csv`, {\n      download: true,\n      complete: (results) => {\n        const newDeckContent = results.data.slice(0, -1);\n        setDeckContent(newDeckContent);\n\n        const firstImage = new Image();\n        firstImage.src = `${process.env.REACT_APP_DECKS_BASE_URL}/${deckName}/${newDeckContent[1][3]}`;\n        firstImage.onload = () => setIsLoading(false);\n      },\n    });\n  }, [deckName]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      // preload next image and audio\n      if (onSlide + 1 < deckContent.length) {\n        (new Image()).src = `${process.env.REACT_APP_DECKS_BASE_URL}/${deckName}/${deckContent[onSlide + 1][3]}`;\n        (new Audio()).src = `${process.env.REACT_APP_DECKS_BASE_URL}/${deckName}/${deckContent[onSlide + 1][2]}`;\n      }\n    }\n  }, [deckContent, deckName, isLoading, onSlide]);\n\n  function nextSlide() {\n    if (onSlide + 1 < deckContent.length) {\n      setOnSlide(onSlide + 1);\n    } else {\n      setIsPlaying(false);\n    }\n  }\n\n  return (\n    <Box\n      className={classes.root}\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box flex=\"1\">\n        {isLoading ? <LoadingSlide /> : (\n          <Slide\n            slideContent={deckContent[onSlide]}\n            deckName={deckName}\n            onSlideFinished={nextSlide}\n            isSlidePlaying={isPlaying}\n            czechLabelShown={czechLabelShown}\n            englishLabelShown={englishLabelShown}\n            pauseDurationMultiplier={pauseDurationMultiplier}\n          />\n        )}\n      </Box>\n      { !isLoading && (\n      <Controls\n        isPlaying={isPlaying}\n        onResumePauseClick={() => setIsPlaying(!isPlaying)}\n        onSlide={onSlide}\n        maxSlide={deckContent.length}\n        onSlideChange={(_, slide) => setOnSlide(slide)}\n        czechLabelShown={czechLabelShown}\n        setCzechLabelShown={setCzechLabelShown}\n        englishLabelShown={englishLabelShown}\n        setEnglishLabelShown={setEnglishLabelShown}\n        pauseDurationMultiplier={pauseDurationMultiplier}\n        setPauseDurationMultiplier={setPauseDurationMultiplier}\n      />\n      )}\n    </Box>\n  );\n}\n","import DeckDetail from './DeckDetail';\n\nexport default DeckDetail;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Layout from './Components/Layout';\nimport DecksList from './Components/Pages/DecksList';\nimport Error404 from './Components/Pages/Error404';\nimport DeckDetail from './Components/Pages/DeckDetail';\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\">\n            <DecksList />\n          </Route>\n          <Route exact path=\"/decks\">\n            <Redirect to=\"/\" />\n          </Route>\n          <Route exact path=\"/decks/:deck\">\n            <DeckDetail />\n          </Route>\n          <Route>\n            <Error404 />\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}