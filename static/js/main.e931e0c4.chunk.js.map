{"version":3,"sources":["Components/Layout.jsx","Components/Pages/DecksList/Deck.jsx","Components/Pages/DecksList/LoadingDeck.jsx","Components/Pages/DecksList/DecksList.jsx","Components/Pages/DecksList/index.js","Components/Pages/Error404/index.js","Components/Pages/Error404/Error404.jsx","Components/Pages/DeckDetail/Slide.jsx","Components/Pages/DeckDetail/LoadingSlide.jsx","Components/Pages/DeckDetail/Controls.jsx","Components/Pages/DeckDetail/DeckDetail.jsx","Components/Pages/DeckDetail/index.js","App.jsx","index.jsx"],"names":["useStyles","makeStyles","theme","offset","mixins","toolbar","Layout","children","classes","CssBaseline","AppBar","Toolbar","to","style","textDecoration","color","Typography","variant","component","className","root","minWidth","Deck","category","name","url","isArchived","onArchive","Card","CardActionArea","Link","CardContent","CardActions","Button","size","onClick","LoadingDeck","Skeleton","Array","Math","floor","random","map","join","deckPadding","paddingTop","spacing","deckListPadding","paddingBottom","archivedDecksHeading","DecksList","useState","allDecks","setAllDecks","activeDecks","setActiveDecks","useLocalStorage","archivedDecks","setArchivedDecks","hiddenDecks","setHiddenDecks","location","useLocation","useEffect","hiddenDeckString","qs","parse","search","ignoreQueryPrefix","newDeck","hiddenDeckSplit","split","length","newHiddenDeck","password","hiddenDeckUrl","slice","oldDecks","isLoading","setIsLoading","fetch","process","then","res","text","result","fetchedDecks","deckString","newDeckValues","Object","fromEntries","error","console","log","entries","filter","Container","keys","key","sort","urlToArchive","urlToUnarchive","Error404","padding","card","width","media","maxWidth","loopButton","float","Slide","slideContent","deckUrl","onSlideFinished","isSlidePlaying","czechLabelShown","englishLabelShown","pauseDurationMultiplier","pauseDuration","useRef","englishText","czechText","audio","image","timesPlayed","setTimesPlayed","timesPlayedRef","isSlideRepeating","setIsSlideRepeating","isAudioPlaying","setIsAudioPlaying","isAudioPaused","setIsAudioPaused","timeoutRef","current","clearTimeout","Box","display","m","src","alt","ToggleButton","value","selected","onChange","Repeat","gutterBottom","playing","height","onEnded","setTimeout","onDuration","t","margin","box","slider","marginLeft","marginRight","marginTop","Controls","isPlaying","onResumePauseClick","onSlide","maxSlide","onSlideChange","setCzechLabelShown","setEnglishLabelShown","setPauseDurationMultiplier","Paper","square","flexDirection","alignItems","IconButton","Pause","PlayArrow","Slider","min","max","valueLabelDisplay","valueLabelFormat","x","FormGroup","row","FormControlLabel","control","Switch","checked","e","target","label","FormControl","InputLabel","id","Select","labelId","MenuItem","minHeight","DeckDetail","useParams","deck","deckContent","setDeckContent","setOnSlide","setIsPlaying","readRemoteFile","download","complete","results","newDeckContent","data","firstImage","Image","onload","Audio","flex","_","slide","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e931e0c4.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  offset: theme.mixins.toolbar,\n}));\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <AppBar>\n        <Toolbar>\n          <Link to=\"/\" style={{ textDecoration: 'none', color: 'unset' }}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Shadow loop\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n      {children}\n    </>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { CardActionArea } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function Deck({\n  category, name, url, isArchived, onArchive,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardActionArea component={Link} to={`decks/${url}`}>\n        <CardContent>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            {category}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"secondary\" component={Link} to={`decks/${url}`}>\n          Spustit\n        </Button>\n        <Button size=\"small\" color=\"secondary\" onClick={onArchive}>\n          {isArchived ? 'Vyjmout z archivu' : 'Archivovat'}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nDeck.propTypes = {\n  category: PropTypes.string.isRequired,\n  isArchived: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  onArchive: PropTypes.func.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function LoadingDeck() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Skeleton>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Základní balíček\n          </Typography>\n        </Skeleton>\n        <Skeleton>\n          <Typography variant=\"h5\" component=\"h2\">\n            {[...Array(Math.floor(Math.random() * 11) + 10)].map(() => ('a')).join('')}\n          </Typography>\n        </Skeleton>\n      </CardContent>\n      <CardActions>\n        <Skeleton>\n          <Button size=\"small\" color=\"secondary\">\n            Spustit od začátku\n          </Button>\n        </Skeleton>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Container, Typography } from '@material-ui/core';\nimport { useLocation } from 'react-router-dom';\nimport qs from 'qs';\nimport { useLocalStorage } from '@rehooks/local-storage';\nimport Deck from './Deck';\nimport LoadingDeck from './LoadingDeck';\n\nconst useStyles = makeStyles((theme) => ({\n  deckPadding: {\n    paddingTop: theme.spacing(2),\n  },\n  deckListPadding: {\n    paddingBottom: theme.spacing(2),\n  },\n  archivedDecksHeading: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport default function DecksList() {\n  const classes = useStyles();\n\n  const [allDecks, setAllDecks] = useState({});\n  const [activeDecks, setActiveDecks] = useState({});\n  const [archivedDecks, setArchivedDecks] = useLocalStorage('archivedDecks', {});\n  const [hiddenDecks, setHiddenDecks] = useLocalStorage('hiddenDecks', {});\n\n  const location = useLocation();\n  useEffect(() => {\n    const hiddenDeckString = qs.parse(location.search, { ignoreQueryPrefix: true }).newDeck;\n    if (!hiddenDeckString) return;\n\n    const hiddenDeckSplit = hiddenDeckString.split('_');\n    if (hiddenDeckSplit.length !== 3) return;\n\n    const newHiddenDeck = {};\n    [newHiddenDeck.category, newHiddenDeck.name, newHiddenDeck.password] = hiddenDeckSplit;\n\n    const hiddenDeckUrl = hiddenDeckSplit.slice(0, 2).join('_');\n    setHiddenDecks({ ...hiddenDecks, [hiddenDeckUrl]: newHiddenDeck });\n  }, [hiddenDecks, location, setHiddenDecks]);\n\n  useEffect(() => {\n    setAllDecks((oldDecks) => ({ ...oldDecks, ...hiddenDecks }));\n  }, [hiddenDecks]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_DECKS_BASE_URL}/decks.txt`)\n      .then((res) => res.text())\n      .then((result) => {\n        const deckStrings = result.split('\\n').slice(0, -1);\n\n        const fetchedDecks = deckStrings.map((deckString) => {\n          const newDeckValues = {};\n          [newDeckValues.category, newDeckValues.name] = deckString.split('_');\n          return [deckString, newDeckValues];\n        });\n\n        setAllDecks((oldDecks) => ({ ...oldDecks, ...Object.fromEntries(fetchedDecks) }));\n        setIsLoading(false);\n      },\n      (error) => { console.log(error); });\n  }, []);\n\n  function archiveDeck(urlToArchive) {\n    setActiveDecks(Object.fromEntries(Object.entries(activeDecks)\n      .filter(([url]) => url !== urlToArchive)));\n    setArchivedDecks({ ...archivedDecks, ...{ [urlToArchive]: allDecks[urlToArchive] } });\n  }\n\n  function unarchiveDeck(urlToUnarchive) {\n    setArchivedDecks(Object.fromEntries(Object.entries(archivedDecks)\n      .filter(([url]) => url !== urlToUnarchive)));\n    setActiveDecks({ ...activeDecks, ...{ [urlToUnarchive]: allDecks[urlToUnarchive] } });\n  }\n\n  useEffect(() => {\n    setActiveDecks(Object.fromEntries(Object.entries(allDecks)\n      .filter(([url]) => !(url in archivedDecks))));\n  }, [allDecks, archivedDecks]);\n\n  return (\n    <Container className={classes.deckListPadding}>\n      {isLoading ? (\n        <>\n          {[...Array(4).keys()].map((key) => (\n            <div className={classes.deckPadding} key={key}>\n              <LoadingDeck />\n            </div>\n          ))}\n        </>\n      ) : (\n        <>\n          {Object.entries(activeDecks).sort().map(([url, { category, name }]) => (\n            <div className={classes.deckPadding} key={url}>\n              <Deck\n                category={category}\n                name={name}\n                url={url}\n                isArchived={false}\n                onArchive={() => archiveDeck(url)}\n              />\n            </div>\n          ))}\n          {Object.entries(archivedDecks).length !== 0 && (\n          <Typography\n            variant=\"h5\"\n            component=\"h2\"\n            className={classes.archivedDecksHeading}\n          >\n            Archivované balíčky\n          </Typography>\n          )}\n          {Object.entries(archivedDecks).sort().map(([url, { category, name }]) => (\n            <div className={classes.deckPadding} key={url}>\n              <Deck\n                category={category}\n                name={name}\n                url={url}\n                isArchived\n                onArchive={() => unarchiveDeck(url)}\n              />\n            </div>\n          ))}\n        </>\n      )}\n    </Container>\n  );\n}\n","import DecksList from './DecksList';\n\nexport default DecksList;\n","import Error404 from './Error404';\n\nexport default Error404;\n","import React from 'react';\n\nexport default function Error404() {\n  return (\n    <>\n      Error 404 :(\n    </>\n  );\n}\n","import PropTypes, { string } from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\nimport ReactPlayer from 'react-player';\nimport { ToggleButton } from '@material-ui/lab';\nimport { Repeat as RepeatIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  card: {\n    width: 'fit-content',\n  },\n  media: {\n    maxWidth: '100%',\n  },\n  loopButton: {\n    float: 'right',\n    paddingBottom: theme.spacing(2),\n  },\n}));\n\nexport default function Slide({\n  slideContent, deckUrl, onSlideFinished, isSlidePlaying, czechLabelShown, englishLabelShown,\n  pauseDurationMultiplier,\n}) {\n  const classes = useStyles();\n\n  const pauseDuration = useRef(2);\n\n  const [englishText, czechText, audio, image] = slideContent;\n\n  const [timesPlayed, setTimesPlayed] = useState(0);\n  const timesPlayedRef = useRef(timesPlayed);\n\n  const [isSlideRepeating, setIsSlideRepeating] = useState(false);\n\n  const [isAudioPlaying, setIsAudioPlaying] = useState(true);\n  const [isAudioPaused, setIsAudioPaused] = useState(false);\n\n  const timeoutRef = useRef(0);\n\n  useEffect(() => {\n    setTimesPlayed(0);\n    timesPlayedRef.current = 0;\n    setIsAudioPaused(false);\n    clearTimeout(timeoutRef.current);\n  }, [slideContent]);\n\n  useEffect(() => {\n    setIsAudioPlaying(isSlidePlaying && !isAudioPaused);\n  }, [isSlidePlaying, isAudioPaused]);\n\n  useEffect(() => {\n    if (isSlidePlaying && timesPlayedRef.current > 2 && !isSlideRepeating) {\n      onSlideFinished();\n    }\n  }, [isSlidePlaying, isSlideRepeating, onSlideFinished, timesPlayed]);\n\n  function onAudioFinished() {\n    setIsAudioPaused(true);\n    timeoutRef.current = setTimeout(() => {\n      timesPlayedRef.current += 1;\n      setTimesPlayed(timesPlayedRef.current);\n      setIsAudioPaused(false);\n    }, pauseDuration.current * 1000 * pauseDurationMultiplier);\n  }\n\n  return (\n    <Box display=\"flex\" className={classes.root}>\n      <Box m=\"auto\">\n        <Card className={classes.card}>\n          <img\n            className={classes.media}\n            src={`${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${image}`}\n            alt={englishText}\n          />\n          <CardContent>\n            <div className={classes.loopButton}>\n              <ToggleButton\n                value=\"repeat\"\n                selected={isSlideRepeating}\n                onChange={() => setIsSlideRepeating(!isSlideRepeating)}\n              >\n                <RepeatIcon />\n              </ToggleButton>\n            </div>\n            { (englishLabelShown || czechLabelShown) && (\n            <>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {englishLabelShown ? englishText : czechText}\n              </Typography>\n              { (englishLabelShown && czechLabelShown) && (\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {czechText}\n              </Typography>\n              )}\n            </>\n            )}\n          </CardContent>\n          <ReactPlayer\n            url={`${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${audio}`}\n            playing={isAudioPlaying}\n            width={0}\n            height={0}\n            onEnded={onAudioFinished}\n            onDuration={(t) => {\n              pauseDuration.current = t;\n            }}\n          />\n        </Card>\n      </Box>\n    </Box>\n  );\n}\n\nSlide.propTypes = {\n  czechLabelShown: PropTypes.bool.isRequired,\n  deckUrl: PropTypes.string.isRequired,\n  englishLabelShown: PropTypes.bool.isRequired,\n  isSlidePlaying: PropTypes.bool.isRequired,\n  onSlideFinished: PropTypes.func.isRequired,\n  pauseDurationMultiplier: PropTypes.number.isRequired,\n  slideContent: PropTypes.arrayOf(string).isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  media: {\n    maxWidth: '100%',\n  },\n}));\n\nexport default function Slide() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Box\n        display=\"flex\"\n      >\n        <Box m=\"auto\">\n          <Card>\n            <Skeleton variant=\"rect\">\n              <div style={{ paddingTop: '57%', width: '400px' }} />\n            </Skeleton>\n            <CardContent>\n              <Skeleton>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Lorem ipsum dolor sit amet\n                </Typography>\n              </Skeleton>\n              <Skeleton>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Lorem ipsum dolor\n                </Typography>\n              </Skeleton>\n            </CardContent>\n          </Card>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Box, Paper, IconButton, Slider, Container, FormControl, InputLabel, Select, MenuItem,\n} from '@material-ui/core';\nimport { Pause as PauseIcon, PlayArrow as PlayArrowIcon } from '@material-ui/icons';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  box: {\n    paddingTop: '20px',\n  },\n  slider: {\n    marginLeft: '15px',\n    marginRight: '15px',\n    marginTop: '10px',\n  },\n}));\n\nexport default function Controls({\n  isPlaying, onResumePauseClick, onSlide, maxSlide, onSlideChange,\n  czechLabelShown, setCzechLabelShown, englishLabelShown, setEnglishLabelShown,\n  pauseDurationMultiplier, setPauseDurationMultiplier,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Paper square className={classes.root}>\n      <Container>\n        <Box className={classes.box} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Box display=\"flex\" width=\"100%\">\n            <IconButton onClick={onResumePauseClick}>\n              { isPlaying ? (\n                <PauseIcon />\n              ) : (\n                <PlayArrowIcon />\n              )}\n            </IconButton>\n            <Slider\n              className={classes.slider}\n              min={0}\n              max={maxSlide - 1}\n              value={onSlide}\n              onChange={onSlideChange}\n              valueLabelDisplay=\"on\"\n              valueLabelFormat={(x) => x + 1}\n            />\n          </Box>\n          <FormGroup row>\n            <FormControlLabel\n              control={(\n                <Switch\n                  checked={englishLabelShown}\n                  onChange={(e) => setEnglishLabelShown(e.target.checked)}\n                  color=\"primary\"\n                />\n              )}\n              label=\"Anglicky\"\n            />\n            <FormControlLabel\n              control={(\n                <Switch\n                  checked={czechLabelShown}\n                  onChange={(e) => setCzechLabelShown(e.target.checked)}\n                  color=\"primary\"\n                />\n              )}\n              label=\"Česky\"\n            />\n            <FormControl variant=\"outlined\">\n              <InputLabel id=\"pause-label\">Pauza</InputLabel>\n              <Select\n                labelId=\"pause-label\"\n                label=\"Pauza\"\n                value={pauseDurationMultiplier}\n                onChange={(e) => setPauseDurationMultiplier(e.target.value)}\n              >\n                <MenuItem value={1}>1×</MenuItem>\n                <MenuItem value={1.5}>1,5×</MenuItem>\n                <MenuItem value={2}>2×</MenuItem>\n              </Select>\n            </FormControl>\n          </FormGroup>\n        </Box>\n      </Container>\n    </Paper>\n  );\n}\n\nControls.propTypes = {\n  czechLabelShown: PropTypes.bool.isRequired,\n  englishLabelShown: PropTypes.bool.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n  maxSlide: PropTypes.number.isRequired,\n  onResumePauseClick: PropTypes.func.isRequired,\n  onSlide: PropTypes.number.isRequired,\n  onSlideChange: PropTypes.func.isRequired,\n  pauseDurationMultiplier: PropTypes.number.isRequired,\n  setCzechLabelShown: PropTypes.func.isRequired,\n  setEnglishLabelShown: PropTypes.func.isRequired,\n  setPauseDurationMultiplier: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { readRemoteFile } from 'react-papaparse';\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Slide from './Slide';\nimport LoadingSlide from './LoadingSlide';\nimport Controls from './Controls';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    '@media (min-width:0px) and (orientation: landscape)': {\n      minHeight: 'calc(100vh - 48px)',\n    },\n    '@media (min-width:600px)': {\n      minHeight: 'calc(100vh - 64px)',\n    },\n    minHeight: 'calc(100vh - 56px)',\n  },\n}));\n\nexport default function DeckDetail() {\n  const classes = useStyles();\n\n  const { deck: deckUrl } = useParams();\n\n  const [deckContent, setDeckContent] = useState([]);\n  const [onSlide, setOnSlide] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [czechLabelShown, setCzechLabelShown] = useState(true);\n  const [englishLabelShown, setEnglishLabelShown] = useState(true);\n  const [pauseDurationMultiplier, setPauseDurationMultiplier] = useState(1.5);\n\n  useEffect(() => {\n    readRemoteFile(`${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${deckUrl}.csv`, {\n      download: true,\n      complete: (results) => {\n        const newDeckContent = results.data.slice(0, -1);\n        setDeckContent(newDeckContent);\n\n        const firstImage = new Image();\n        firstImage.src = `${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${newDeckContent[1][3]}`;\n        firstImage.onload = () => setIsLoading(false);\n      },\n    });\n  }, [deckUrl]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      // preload next image and audio\n      if (onSlide + 1 < deckContent.length) {\n        (new Image()).src = `${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${deckContent[onSlide + 1][3]}`;\n        (new Audio()).src = `${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${deckContent[onSlide + 1][2]}`;\n      }\n    }\n  }, [deckContent, deckUrl, isLoading, onSlide]);\n\n  function nextSlide() {\n    if (onSlide + 1 < deckContent.length) {\n      setOnSlide(onSlide + 1);\n    } else {\n      setIsPlaying(false);\n    }\n  }\n\n  return (\n    <Box\n      className={classes.root}\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box flex=\"1\">\n        {isLoading ? <LoadingSlide /> : (\n          <Slide\n            slideContent={deckContent[onSlide]}\n            deckUrl={deckUrl}\n            onSlideFinished={nextSlide}\n            isSlidePlaying={isPlaying}\n            czechLabelShown={czechLabelShown}\n            englishLabelShown={englishLabelShown}\n            pauseDurationMultiplier={pauseDurationMultiplier}\n          />\n        )}\n      </Box>\n      { !isLoading && (\n      <Controls\n        isPlaying={isPlaying}\n        onResumePauseClick={() => setIsPlaying(!isPlaying)}\n        onSlide={onSlide}\n        maxSlide={deckContent.length}\n        onSlideChange={(_, slide) => setOnSlide(slide)}\n        czechLabelShown={czechLabelShown}\n        setCzechLabelShown={setCzechLabelShown}\n        englishLabelShown={englishLabelShown}\n        setEnglishLabelShown={setEnglishLabelShown}\n        pauseDurationMultiplier={pauseDurationMultiplier}\n        setPauseDurationMultiplier={setPauseDurationMultiplier}\n      />\n      )}\n    </Box>\n  );\n}\n","import DeckDetail from './DeckDetail';\n\nexport default DeckDetail;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Layout from './Components/Layout';\nimport DecksList from './Components/Pages/DecksList';\nimport Error404 from './Components/Pages/Error404';\nimport DeckDetail from './Components/Pages/DeckDetail';\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\">\n            <DecksList />\n          </Route>\n          <Route exact path=\"/decks\">\n            <Redirect to=\"/\" />\n          </Route>\n          <Route exact path=\"/decks/:deck\">\n            <DeckDetail />\n          </Route>\n          <Route>\n            <Error404 />\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}